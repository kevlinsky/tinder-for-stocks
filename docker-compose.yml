version: "3.9"

services:
  db:
    image: postgres:13
    volumes:
      - /data/db:/var/lib/postgresql/data
    env_file:
      - .env
  initialize:
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    env_file:
      - .env
    command: bash -c "python wait-postgres.py && python app/init_stocks.py"
    depends_on:
      - db
  celery:
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    env_file:
      - .env
    command: bash -c "python wait-postgres.py && celery -A app.worker beat & celery -A app.worker.celery worker -l INFO --without-gossip --without-mingle --without-heartbeat -Ofair --pool=solo"
    depends_on:
      - initialize
  web:
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    restart: on-failure
    volumes:
      - ./logs:/usr/src/logs/
    env_file:
      - .env
    command: bash -c "python wait-postgres.py && uvicorn app.main:app --host 0.0.0.0 --port 8080"
    depends_on:
      - celery
  nginx:
    build: ./nginx
    ports:
      - "8000:8000"
    depends_on:
      - web
  redis:
    image: redis
    restart: on-failure
#  test:
#    build:
#      context: ./
#      dockerfile: ./test/Dockerfile
#    env_file:
#      - .env
#    depends_on:
#      - web
